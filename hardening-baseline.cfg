# NOTICE
#
# THIS CONFIGURATION OPTION FILE IS A PROTOTYPE.
# Only apache_check.py uses this now. If this cfg file is not present
# apache_check.py will use default values and proceed with the tests.

# Configuration file for hardening audit scripts.

# Comments are marked using # and ;.

# By default, the hardening audit scripts will run all audit steps.
# Use this configuration file if you need to skip certain tests.
# The config file is divided into sections. Each section contains config
# for appropriate software such as Apache HTTPD, MySQL or CentOS.
# The audit scripts will skip tests which are configured to 'false' in this file.
# Any steps where the value is set to 'true' is ignored, as that is the default
# setting anyways.

; General Syntax:
; Each audit section such as [ApacheHTTPD] or [MySQL] contains config lines for the tests. 
; If you dont want to change the default values, either delete a test config, or comment it.
; To change the defaults, the syntax is:
;   [testName] = [false|high|med|low]
; 
; Where:
;	testName:    Name of the hardening test that we want to configure.
;		     The testNames are the names of functions that begin with "check_" in the corresponding script. 
; 		     
;		     For example, apache_check.py has several function names beginning with check_. Some valid testName 
;		     values for apache_check.py are: userdir, httpdinstall, etc.
;
;       false:	     Tests marked as false will be skipped. By default all tests are enabled, so true is not acceptable value here. 
;
;       high:        If the hardening subtest fails, then the finding is marked as "HIGH" risk.
;       med:	     Same as above, but "MED" risk is used.
;       low:         Same as above, but "LOW" risk is used.
; 			
; Default: If a subtest risk is not configured here, then its default risk is "ERROR". This simply means that the subtest failed.
 
[ApacheHTTPD]
 
; Tells check_mimemagic() function to mark the risk as low.
mimemagic = low

; Tells check_rewritemodule() function to mark the risk as med.
rewritemodule = med

; Tells apache_check.py not to run check_serverstatus() at all.
serverstatus = false

; The rest of the checks present in apache_check.py are unconfigured here. 
; All remaining checks are executed with the risk set as just "ERROR".

#[MySQL]
 #users = high

#[CentOS]
#sshd = false
#networking = med

